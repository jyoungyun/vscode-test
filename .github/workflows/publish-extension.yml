name: Publish extension

on:
  workflow_call:
    inputs:
      build_type:
        description: 'Build type (nightly/official)'
        type: string
        default: 'official'
      prerelease:
        description: 'Identify the release as a prerelease (default: false)'
        type: boolean
        default: false
      publish:
        description: 'Publish extension to marketplace'
        type: boolean
        default: false
    secrets:
      VSCE_PAT:
        required: true
    outputs:
      package_name:
        description: 'Package name'
        value: ${{ jobs.publish-extension.outputs.package_name }}

jobs:
  publish-extension:
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{ steps.search_package.outputs.package_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install node packages
        run: |
          npm install
      - name: Install vsce tool
        run: |
          npm install -g vsce
      - name: Create vsix package (nightly release)
        if: ${{ inputs.build_type == "nightly" }}
        run: |
          VER=$(npm pkg get version | tr -d '"')
          SHA=$(git rev-parse --short HEAD)
          vsce package --no-git-tag-version ${VER}-${SHA}
      - name: Create vsix package (pre-release)
        if: ${{ inputs.build_type == "official" && inputs.prerelease }}
        run: |
          vsce package --pre-release
      - name: Create vsix package
        if: ${{ inputs.build_type == "official" && !inputs.prerelease }}
        run: |
          vsce package
      - id: search_package
        run: |
          fname=$(find . -name "*.vsix" | xargs -I {} basename {})
          echo "package_name=${fname}" >> $GITHUB_OUTPUT
      - name: Publish vsix package
        if: ${{ inputs.publish }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          vsce publish -i ${{ steps.search_package.outputs.package_name }}
      - name: Upload vsix package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.search_package.outputs.package_name }}
          path: ./${{ steps.search_package.outputs.package_name }}
